AWSTemplateFormatVersion: 2010-09-09

Description: Sets up an pcluster on AWS
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: PCluster Launcher Node Configuration
        Parameters:
          - InstanceType
          - SSHLocation
          - KeyPair
          - CustomAMI
      - Label:
          default: Head Node Configuration
        Parameters:
          - HeadNodeInstanceType
          - VpcId
          - HeadNodeSubnetId
          - FileSystemId
      - Label:
          default: Scheduler Configuration
        Parameters:
          - Scheduler
          - WorkerNodeInstanceType
          - WorkerNodeSubnetId
          - ComputeEnvMinvCpus
          - ComputeEnvMaxvCpus
          - ComputeEnvDesiredvCpus
          - SpotBidPercentage
          - ResearcherName
          - ProjectId
    ProductName: Pcluster


Parameters:
  InstanceType:
    Type: String
    Description: Instance type for pcluster. Default is t2.micro.
    AllowedValues:
      - t2.micro
      - t2.small
      - t2.medium
      - t2.large
      - t3.micro
      - t3.small      
    Description: The instance type to be used for the launcher node
    Default: t3.micro
  KeyPair: 
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instance. If no key pairs exist, please create one from the button next to the dropdown. Please contact your Administrator if you are unable to create one.
    Type: "AWS::EC2::KeyPair::KeyName"
  SSHLocation:
    Description: The IP address range that can be used to SSH to the EC2 instances
    Type: String
    MinLength: '9'
    MaxLength: '18'
    Default: 0.0.0.0/0
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.
  ResearcherName:
    Type: String
  ProjectId:
    Type: String
  Scheduler:
    Description: Cluster scheduler
    Type: String
    Default: awsbatch
    ConstraintDescription: Must be a supported scheduler
    AllowedValues:
     - slurm
     - awsbatch
  VpcId:
    Type: AWS::EC2::VPC::Id
    Description: 'The VPC to create security groups and deploy AWS Batch or slurm to.'
  HeadNodeInstanceType:
    Description: Head Node EC2 instance type
    Type: String
    Default: t3.micro
    AllowedValues: [t2.nano, t2.micro, t2.small, t2.medium, t3.micro, t3.small, t3.medium, t3.large, t3.xlarge]
    ConstraintDescription: Must be a valid EC2 instance type.
  WorkerNodeInstanceType:
    Description: Specify the instance types to be used to carry out the computation.
    Type: String
    Default: c4.large
    AllowedValues: [c4.large, m4.large, r4.large, c4.4xlarge, m4.4xlarge, r4.4xlarge]
  HeadNodeSubnetId:
    Type: AWS::EC2::Subnet::Id
    Description: 'Subnet you want your Head Node to launch in. You must select a public subnet.'
  WorkerNodeSubnetId:
    Type: AWS::EC2::Subnet::Id
    Description: 'Subnet you want your Batch or slurm Worker Node to launch in. We recommend public subnets.'
  ComputeEnvDesiredvCpus:
    Description: The Desired number of CPUs for the default Batch Compute Environment
    Type: Number
    Default: 0
  ComputeEnvMinvCpus:
    Description: The minimum number of CPUs to be kept in running state for the Batch/slurm Worker Nodes. If you give a non-zero value, some worker nodes may stay in running state always and you may incur higher cost.
    Type: Number
    Default: 0
  ComputeEnvMaxvCpus:
    Description: The maximum number of CPUs for the default Batch or slurm Compute Environment
    Type: Number
    Default: 10
  SpotBidPercentage:
    Type: Number
    Description: The maximum percentage of On-Demand pricing you want to pay for Spot resources. You will always pay the lowest Spot market price and never more than your maximum percentage.
    Default: 100
  CustomAMI:
    Type: String
    Description: Enter the AMI Id of a custom AMI if you wish to use a non-default AMI. e.g. ami-12345678. The AMI Id entered should exist in this project account and region
    Default: default
  FileSystemId:
    Type: String
    Description: Enter the File System Id of the FSx for Lustre file system which you want to use. e.g. fs-12345678. Leave this field to default if you do not want to use FSx for Lustre
    Default: default  
  

Resources :
    PortalRole:
      Type: AWS::IAM::Role
      Properties:
        Description: The role used by the EC2 Instance running the portal
        AssumeRolePolicyDocument:
          Statement:
           - Effect: Allow
             Principal:
              Service:
                - ec2.amazonaws.com
             Action:
              - sts:AssumeRole              
        ManagedPolicyArns:
         - arn:aws:iam::aws:policy/AmazonS3FullAccess
         - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore
         - arn:aws:iam::aws:policy/AWSBatchFullAccess
         - arn:aws:iam::aws:policy/service-role/AWSBatchServiceRole
         - arn:aws:iam::aws:policy/service-role/AWSAppRunnerServicePolicyForECRAccess
         - arn:aws:iam::aws:policy/AmazonElasticContainerRegistryPublicPowerUser
         - arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryPowerUser
         - arn:aws:iam::aws:policy/service-role/AmazonEC2ContainerServiceforEC2Role
         - arn:aws:iam::aws:policy/IAMFullAccess
         - Ref: GatewayRolePolicy
        Path: /
    GatewayInstanceProfile:
      Type: AWS::IAM::InstanceProfile
      Properties:
        Path: /
        Roles:
        - Ref: PortalRole
    GatewayRolePolicy:
      Type: AWS::IAM::ManagedPolicy
      Properties:
        ManagedPolicyName: !Sub ${AWS::StackName}
        PolicyDocument:
          Version: "2012-10-17"
          Statement:
           - Effect: Allow
             Action:
              - config:*
              - ec2:Describe*
              - ec2:CopyImage
              - ec2:*
              - ec2:ModifyImageAttribute
              - ec2:ModifyInstanceMetadataOptions
              - ec2:DescribeRegions
              - ec2:DescribeAvailabilityZones
              - iam:attachRolePolicy
              - iam:createPolicy
              - iam:createPolicyVersion
              - iam:createRole
              - iam:deletePolicy
              - iam:deletePolicyVersion
              - iam:detachRolePolicy
              - iam:updateAssumeRolePolicy
              - elasticloadbalancing:RegisterTargets
              - ses:*
              - sns:*
              - logs:*
              - lambda:*
              - events:*
              - ecr:CreateRepository
              - ecr:ReplicateImage
              - ecr:*
              - codebuild:*
              - iam:GetPolicy
              - iam:GetPolicyVersion
              - iam:GetRole
              - sts:AssumeRole
              - cloudformation:*
              - cloudwatch:*
              - dynamodb:*
              - route53:*
              - ssm:*
              - fsx:*
             Resource: "*"
    InstanceSecurityGroup:
      Type: AWS::EC2::SecurityGroup
      Properties:
        GroupDescription: Enable SSH access
        SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: !Ref 'SSHLocation'
    EC2Instance : 
      Type : AWS::EC2::Instance
      CreationPolicy:
       ResourceSignal:
         Timeout: PT40M
      Properties : 
        KeyName: !Ref KeyPair
        ImageId: '{{resolve:ssm:/RL/RG/StandardCatalog/ParallelCluster-linux-ami}}'
        InstanceType: !Ref InstanceType
        SecurityGroups: [!Ref 'InstanceSecurityGroup']
        PropagateTagsToVolumeOnCreation: true
        IamInstanceProfile:
          Ref: GatewayInstanceProfile
        Tags:
        - Key: researcher_name
          Value: !Ref ResearcherName
        - Key: project_name
          Value: !Ref ProjectId
        - Key: cost_resource
          Value: !Sub ${AWS::StackName}
        UserData:
          Fn::Base64:
            !Sub |
              #!/bin/bash 
              set -e          
              trap '/opt/aws/bin/cfn-signal --exit-code 1 --resource EC2Instance --region ${AWS::Region} --stack ${AWS::StackName}' ERR    
              sudo yum update -y --security        
              cd /home/ec2-user/parallel-update             
              sudo -u ec2-user ./Provision-pcluster.sh ${Scheduler} ${AWS::Region} ${HeadNodeInstanceType} ${HeadNodeSubnetId} ${KeyPair} ${WorkerNodeInstanceType} ${ComputeEnvMinvCpus} ${ComputeEnvMaxvCpus} ${WorkerNodeSubnetId} ${ComputeEnvDesiredvCpus} ${SpotBidPercentage} ${AWS::StackName} ${CustomAMI} ${FileSystemId}
              /opt/aws/bin/cfn-signal --exit-code 0 --resource EC2Instance --region ${AWS::Region} --stack ${AWS::StackName}
              sleep 10
              aws ec2 stop-instances --instance-ids `wget -qO- http://instance-data/latest/meta-data/instance-id`

Outputs:
  InstanceId:
    Description: InstanceId of the newly created EC2 instance
    Value: !Ref 'EC2Instance'
  InstanceIPAddress:
    Description: IP address of the newly created EC2 instance
    Value: !GetAtt EC2Instance.PublicIp
  ClusterName:
    Description: Name of the Plcuster created
    Value: !Join ['-', ["RG", "Pcluster", !Select [1, !Split ["-", !Ref EC2Instance ]]]]